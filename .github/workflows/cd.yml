name: CD Pipeline
on:
  push:
    branches: 
      - main

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Pull Docker image
        run: |
          echo "Pulling latest Docker image..."
          sudo docker pull elmorjani/saydaliati-backend-app:latest
          
      - name: Stop and Remove Old Container
        run: |
          echo "Stopping old container if exists..."
          sudo docker rm -f saydaliati-backend-app-container || true
      
      - name: Run Docker Container
        run: |
          sudo docker run -d \
            -p 3000:3000 \
            --name saydaliati-backend-app-container \
            -e PORT="${{ secrets.PORT }}" \
            -e APP_URL="${{ secrets.APP_URL }}" \
            -e CLIENT_URL="${{ secrets.CLIENT_URL }}" \
            -e FIREBASE_PROJECT="${{ secrets.FIREBASE_PROJECT }}" \
            -e FIREBASE_PRIVATE_KEY="${{ secrets.FIREBASE_PRIVATE_KEY }}" \
            -e FIREBASE_CLIENT_EMAIL="${{ secrets.FIREBASE_CLIENT_EMAIL }}" \
            -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -e AWS_S3_BUCKET_NAME="${{ secrets.AWS_S3_BUCKET_NAME }}" \
            -e AWS_REGION="${{ secrets.AWS_REGION }}" \
            -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            -e EMAIL_USER="${{ secrets.EMAIL_USER }}" \
            -e EMAIL_PASS="${{ secrets.EMAIL_PASS }}" \
            -e EMAIL_FROM="${{ secrets.EMAIL_FROM }}" \
            elmorjani/saydaliati-backend-app

      - name: Log Docker Container Output
        run: |
          echo "Fetching Docker container logs..."
          sudo docker logs saydaliati-backend-app-container --tail 50 || true

      - name: Verify Container Status
        run: |
          if [ "$(sudo docker inspect -f '{{.State.Running}}' saydaliati-backend-app-container)" = "true" ]; then
            echo "Container is running successfully"
          else
            echo "Container failed to start properly"
            exit 1
          fi

      - name: Deployment Success Message
        if: success()
        run: |
          echo "✅ Deployment Successful!"
          echo "Container Name: saydaliati-backend-app-container"
          echo "Port: 3000"
          echo "Status: Running"
          echo "Application is now live and accepting connections"

      - name: Deployment Failure Message
        if: failure()
        run: |
          echo "❌ Deployment Failed!"
          echo "Error: Container failed to deploy properly"
          echo "Debug Steps:"
          echo "1. Check container logs above"
          echo "2. Verify all environment variables are properly set"
          echo "3. Check system resources and port availability"
          sudo docker logs saydaliati-backend-app-container --tail 50 || true