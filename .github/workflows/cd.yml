name: CD Pipeline
on:
  push:
    branches: 
      - main

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Pull Docker image
        run: |
          echo "Pulling latest Docker image..."
          sudo docker pull elmorjani/saydaliati-backend-app:latest
          
      - name: Stop Old Container
        run: |
          echo "Stopping old container if exists..."
          sudo docker stop saydaliati-backend-app-container || true
          sudo docker rm saydaliati-backend-app-container || true
      
      - name: Run Docker Container
        id: run-container
        run: |
          sudo docker run -d \
            --restart unless-stopped \
            --name saydaliati-backend-app-container \
            -p 3001:3001 \
            --env-file <(cat << EOF
          PORT=${{ secrets.PORT }}
          APP_URL=${{ secrets.APP_URL }}
          CLIENT_URL=${{ secrets.CLIENT_URL }}
          FIREBASE_PROJECT=${{ secrets.FIREBASE_PROJECT }}
          FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}
          AWS_REGION=${{ secrets.AWS_REGION }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          EMAIL_USER=${{ secrets.EMAIL_USER }}
          EMAIL_PASS=${{ secrets.EMAIL_PASS }}
          EMAIL_FROM=${{ secrets.EMAIL_FROM }}
          EOF
          ) \
          elmorjani/saydaliati-backend-app:latest

      - name: Wait for container to start
        run: sleep 10

      - name: Check Container Health
        run: |
          if ! sudo docker ps --filter "name=saydaliati-backend-app-container" --format "{{.Status}}" | grep -q "Up"; then
            echo "Container failed to start properly. Checking logs..."
            sudo docker logs saydaliati-backend-app-container
            exit 1
          fi

      - name: Deployment Success Message
        if: success()
        run: |
          echo "✅ Deployment Successful!"
          echo "Container Name: saydaliati-backend-app-container"
          echo "Port: 3001"
          echo "Status: $(sudo docker ps --filter name=saydaliati-backend-app-container --format '{{.Status}}')"

      - name: Deployment Failure Message
        if: failure()
        run: |
          echo "❌ Deployment Failed!"
          echo "Container Logs:"
          sudo docker logs saydaliati-backend-app-container
